{
  "Description": "An auto-generated nested stack for the @function directive.",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "HasEnvironmentParameter": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "referencetotransformerrootstackenv10C5A902Ref"
            },
            "NONE"
          ]
        }
      ]
    }
  },
  "Resources": {
    "CheckinvitecodeLambdaDataSourceServiceRole91C4CEA1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "CheckinvitecodeLambdaDataSourceServiceRoleDefaultPolicy1964AA24": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::If": [
                    "HasEnvironmentParameter",
                    {
                      "Fn::Sub": [
                        "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:checkinvitecode-${env}",
                        {
                          "env": {
                            "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:checkinvitecode"
                    }
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::If": [
                          "HasEnvironmentParameter",
                          {
                            "Fn::Sub": [
                              "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:checkinvitecode-${env}",
                              {
                                "env": {
                                  "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                }
                              }
                            ]
                          },
                          {
                            "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:checkinvitecode"
                          }
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CheckinvitecodeLambdaDataSourceServiceRoleDefaultPolicy1964AA24",
        "Roles": [
          {
            "Ref": "CheckinvitecodeLambdaDataSourceServiceRole91C4CEA1"
          }
        ]
      }
    },
    "CheckinvitecodeLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "Name": "CheckinvitecodeLambdaDataSource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::If": [
              "HasEnvironmentParameter",
              {
                "Fn::Sub": [
                  "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:checkinvitecode-${env}",
                  {
                    "env": {
                      "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                    }
                  }
                ]
              },
              {
                "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:checkinvitecode"
              }
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "CheckinvitecodeLambdaDataSourceServiceRole91C4CEA1",
            "Arn"
          ]
        }
      }
    },
    "InvokeCheckinvitecodeLambdaDataSourceInvokeCheckinvitecodeLambdaDataSourceAppSyncFunctionAD5A9512": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "CheckinvitecodeLambdaDataSource",
            "Name"
          ]
        },
        "Name": "InvokeCheckinvitecodeLambdaDataSource",
        "FunctionVersion": "2018-05-29",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeCheckinvitecodeLambdaDataSource.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeCheckinvitecodeLambdaDataSource.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "CheckinvitecodeLambdaDataSource"
      ]
    },
    "QuerycheckInviteCodeResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "checkInviteCode",
        "TypeName": "Query",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "InvokeCheckinvitecodeLambdaDataSourceInvokeCheckinvitecodeLambdaDataSourceAppSyncFunctionAD5A9512",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "## [Start] Stash resolver specific context.. **\n$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"checkInviteCode\"))\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n{}\n## [End] Stash resolver specific context.. **"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.checkInviteCode.res.vtl"
            ]
          ]
        }
      }
    },
    "GetWaitListByEmailLambdaDataSourceServiceRole3E9366C4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "GetWaitListByEmailLambdaDataSourceServiceRoleDefaultPolicyFFF0C877": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::If": [
                    "HasEnvironmentParameter",
                    {
                      "Fn::Sub": [
                        "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetWaitListByEmail-${env}",
                        {
                          "env": {
                            "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetWaitListByEmail"
                    }
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::If": [
                          "HasEnvironmentParameter",
                          {
                            "Fn::Sub": [
                              "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetWaitListByEmail-${env}",
                              {
                                "env": {
                                  "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                }
                              }
                            ]
                          },
                          {
                            "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetWaitListByEmail"
                          }
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "GetWaitListByEmailLambdaDataSourceServiceRoleDefaultPolicyFFF0C877",
        "Roles": [
          {
            "Ref": "GetWaitListByEmailLambdaDataSourceServiceRole3E9366C4"
          }
        ]
      }
    },
    "GetWaitListByEmailLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "Name": "GetWaitListByEmailLambdaDataSource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::If": [
              "HasEnvironmentParameter",
              {
                "Fn::Sub": [
                  "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetWaitListByEmail-${env}",
                  {
                    "env": {
                      "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                    }
                  }
                ]
              },
              {
                "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetWaitListByEmail"
              }
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "GetWaitListByEmailLambdaDataSourceServiceRole3E9366C4",
            "Arn"
          ]
        }
      }
    },
    "InvokeGetWaitListByEmailLambdaDataSourceInvokeGetWaitListByEmailLambdaDataSourceAppSyncFunction4772E229": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "GetWaitListByEmailLambdaDataSource",
            "Name"
          ]
        },
        "Name": "InvokeGetWaitListByEmailLambdaDataSource",
        "FunctionVersion": "2018-05-29",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeGetWaitListByEmailLambdaDataSource.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeGetWaitListByEmailLambdaDataSource.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "GetWaitListByEmailLambdaDataSource"
      ]
    },
    "QueryfetchWaitListByEmailResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "fetchWaitListByEmail",
        "TypeName": "Query",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "InvokeGetWaitListByEmailLambdaDataSourceInvokeGetWaitListByEmailLambdaDataSourceAppSyncFunction4772E229",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "## [Start] Stash resolver specific context.. **\n$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"fetchWaitListByEmail\"))\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n{}\n## [End] Stash resolver specific context.. **"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.fetchWaitListByEmail.res.vtl"
            ]
          ]
        }
      }
    },
    "GetWaitListByInviteLinkLambdaDataSourceServiceRoleCBD2C468": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "GetWaitListByInviteLinkLambdaDataSourceServiceRoleDefaultPolicy2BF3978E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::If": [
                    "HasEnvironmentParameter",
                    {
                      "Fn::Sub": [
                        "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetWaitListByInviteLink-${env}",
                        {
                          "env": {
                            "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetWaitListByInviteLink"
                    }
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::If": [
                          "HasEnvironmentParameter",
                          {
                            "Fn::Sub": [
                              "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetWaitListByInviteLink-${env}",
                              {
                                "env": {
                                  "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                }
                              }
                            ]
                          },
                          {
                            "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetWaitListByInviteLink"
                          }
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "GetWaitListByInviteLinkLambdaDataSourceServiceRoleDefaultPolicy2BF3978E",
        "Roles": [
          {
            "Ref": "GetWaitListByInviteLinkLambdaDataSourceServiceRoleCBD2C468"
          }
        ]
      }
    },
    "GetWaitListByInviteLinkLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "Name": "GetWaitListByInviteLinkLambdaDataSource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::If": [
              "HasEnvironmentParameter",
              {
                "Fn::Sub": [
                  "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetWaitListByInviteLink-${env}",
                  {
                    "env": {
                      "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                    }
                  }
                ]
              },
              {
                "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:GetWaitListByInviteLink"
              }
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "GetWaitListByInviteLinkLambdaDataSourceServiceRoleCBD2C468",
            "Arn"
          ]
        }
      }
    },
    "InvokeGetWaitListByInviteLinkLambdaDataSourceInvokeGetWaitListByInviteLinkLambdaDataSourceAppSyncFunction72C32B98": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "GetWaitListByInviteLinkLambdaDataSource",
            "Name"
          ]
        },
        "Name": "InvokeGetWaitListByInviteLinkLambdaDataSource",
        "FunctionVersion": "2018-05-29",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeGetWaitListByInviteLinkLambdaDataSource.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeGetWaitListByInviteLinkLambdaDataSource.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "GetWaitListByInviteLinkLambdaDataSource"
      ]
    },
    "QueryfetchWaitListByInviteLinkResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "fetchWaitListByInviteLink",
        "TypeName": "Query",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "InvokeGetWaitListByInviteLinkLambdaDataSourceInvokeGetWaitListByInviteLinkLambdaDataSourceAppSyncFunction72C32B98",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "## [Start] Stash resolver specific context.. **\n$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"fetchWaitListByInviteLink\"))\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n{}\n## [End] Stash resolver specific context.. **"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.fetchWaitListByInviteLink.res.vtl"
            ]
          ]
        }
      }
    },
    "DemeMuteKickGroupUserHandlerLambdaDataSourceServiceRole8B39AE55": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "DemeMuteKickGroupUserHandlerLambdaDataSourceServiceRoleDefaultPolicyDC2ECE00": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::If": [
                    "HasEnvironmentParameter",
                    {
                      "Fn::Sub": [
                        "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:DemeMuteKickGroupUserHandler-${env}",
                        {
                          "env": {
                            "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:DemeMuteKickGroupUserHandler"
                    }
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::If": [
                          "HasEnvironmentParameter",
                          {
                            "Fn::Sub": [
                              "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:DemeMuteKickGroupUserHandler-${env}",
                              {
                                "env": {
                                  "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                }
                              }
                            ]
                          },
                          {
                            "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:DemeMuteKickGroupUserHandler"
                          }
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DemeMuteKickGroupUserHandlerLambdaDataSourceServiceRoleDefaultPolicyDC2ECE00",
        "Roles": [
          {
            "Ref": "DemeMuteKickGroupUserHandlerLambdaDataSourceServiceRole8B39AE55"
          }
        ]
      }
    },
    "DemeMuteKickGroupUserHandlerLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "Name": "DemeMuteKickGroupUserHandlerLambdaDataSource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::If": [
              "HasEnvironmentParameter",
              {
                "Fn::Sub": [
                  "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:DemeMuteKickGroupUserHandler-${env}",
                  {
                    "env": {
                      "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                    }
                  }
                ]
              },
              {
                "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:DemeMuteKickGroupUserHandler"
              }
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "DemeMuteKickGroupUserHandlerLambdaDataSourceServiceRole8B39AE55",
            "Arn"
          ]
        }
      }
    },
    "InvokeDemeMuteKickGroupUserHandlerLambdaDataSourceInvokeDemeMuteKickGroupUserHandlerLambdaDataSourceAppSyncFunction996F5DDF": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "DemeMuteKickGroupUserHandlerLambdaDataSource",
            "Name"
          ]
        },
        "Name": "InvokeDemeMuteKickGroupUserHandlerLambdaDataSource",
        "FunctionVersion": "2018-05-29",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeDemeMuteKickGroupUserHandlerLambdaDataSource.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeDemeMuteKickGroupUserHandlerLambdaDataSource.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "DemeMuteKickGroupUserHandlerLambdaDataSource"
      ]
    },
    "MutationmuteUserResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "muteUser",
        "TypeName": "Mutation",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "InvokeDemeMuteKickGroupUserHandlerLambdaDataSourceInvokeDemeMuteKickGroupUserHandlerLambdaDataSourceAppSyncFunction996F5DDF",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "## [Start] Stash resolver specific context.. **\n$util.qr($ctx.stash.put(\"typeName\", \"Mutation\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"muteUser\"))\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n{}\n## [End] Stash resolver specific context.. **"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.muteUser.res.vtl"
            ]
          ]
        }
      }
    }
  },
  "Parameters": {
    "referencetotransformerrootstackenv10C5A902Ref": {
      "Type": "String"
    },
    "referencetotransformerrootstackGraphQLAPI20497F53ApiId": {
      "Type": "String"
    },
    "referencetotransformerrootstackS3DeploymentBucket7592718ARef": {
      "Type": "String"
    },
    "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref": {
      "Type": "String"
    },
    "referencetotransformerrootstackauthRoleNameFB872D50Ref": {
      "Type": "String"
    },
    "referencetotransformerrootstackunauthRoleName49F3C1FERef": {
      "Type": "String"
    }
  }
}